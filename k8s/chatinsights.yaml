---
  apiVersion: v1
  kind: Namespace
  metadata:
    name: chat-insights
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: chat-insights
  namespace: chat-insights
  labels:
    app: chat-insights
spec:
  replicas: 1
  selector:
    matchLabels:
      app: chat-insights
  template:
    metadata:
      labels:
        app: chat-insights
    spec:
      containers:
      - name: chat-insights
        image: andilejaden/chatinsight:sha-1260fd6
        imagePullPolicy: Always
        ports:
          - containerPort: 8000
            name: http-web-port
        volumeMounts:
          - name: uploads-volume
            mountPath: /app/uploads
      volumes:
        - name: uploads-volume
          emptyDir:
            sizeLimit: 1Gi

---
apiVersion: v1
kind: Service
metadata:
  name: chat-insights-service
  namespace: chat-insights
spec:
  selector:
    app: chat-insights
  ports:
    - name: http
      protocol: TCP
      port: 8000
      targetPort: http-web-port
  type: ClusterIP

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: chat-insights
  namespace: chat-insights
  annotations:
    nginx.ingress.kubernetes.io/use-regex: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: 10m        # Max upload size is 10MB
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"   # 5 mins to wait for a response
    nginx.ingress.kubernetes.io/proxy-send-timeout: "300"   # 5 mins to send data
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "60" # 60s to establish a connection
spec:
  ingressClassName: nginx
  rules:
    - host: chatinsights.app
      http:
        paths:
          - path: /?(.*)
            pathType: ImplementationSpecific
            backend:
              service:
                name: chat-insights-service
                port:
                  name: http

